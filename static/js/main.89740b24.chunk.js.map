{"version":3,"sources":["Counter.js","App.js","index.js"],"names":["Counter","props","state","count","tap","amount","cost","multiplier","auto","setInterval","isOverStackTap","isOverStackAuto","warntap","document","getElementById","warnauto","style","visibility","display","setState","Number","toFixed","addEventListener","e","increment","this","alert","className","onClick","upgrade","id","color","React","Component","App","ReactDOM","render"],"mappings":"qLAwGeA,E,kDArGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,IACPC,IAAK,CACDC,OAAQ,EACRC,KAAM,IACNC,WAAY,GAEhBC,KAAM,CACFH,OAAQ,EACRC,KAAM,IACNC,WAAY,IAIpBE,aAAY,WACR,IAAIC,EAAiB,EAAKR,MAAMC,OAA+B,EAAtB,EAAKD,MAAME,IAAIE,KACpDK,EAAkB,EAAKT,MAAMC,OAAgC,EAAvB,EAAKD,MAAMM,KAAKF,KACtDM,EAAUC,SAASC,eAAe,WAClCC,EAAWF,SAASC,eAAe,YAGvCC,EAASC,MAAMC,WAAaN,EAC5BC,EAAQI,MAAME,QAAUR,EAAiB,SAAW,OACpDK,EAASC,MAAME,QAAUP,EAAkB,SAAW,OAEtD,EAAKQ,SAAS,CACVhB,MAAOiB,QAAQ,EAAKlB,MAAMC,MAAQ,EAAKD,MAAMM,KAAKH,OAAS,EAAKH,MAAMM,KAAKD,YAAYc,QAAQ,IAC/FjB,IAAK,CACDC,OAAQ,EAAKH,MAAME,IAAIC,OACvBC,KAAM,EAAKJ,MAAME,IAAIE,KACrBC,WAAaG,EAAiB,GAAM,GAExCF,KAAM,CACFH,OAAQ,EAAKH,MAAMM,KAAKH,OACxBC,KAAM,EAAKJ,MAAMM,KAAKF,KACtBC,WAAaI,EAAkB,GAAM,OAG9C,KAEHE,SAASS,iBAAiB,SAAS,SAAAC,GAAC,OAAI,EAAKC,eA1C9B,E,6CA6CnB,WACIC,KAAKN,SAAS,CACVhB,MAAOsB,KAAKvB,MAAMC,MAAQsB,KAAKvB,MAAME,IAAIC,OAASoB,KAAKvB,MAAME,IAAIG,e,kBAIzE,WACQkB,KAAKvB,MAAMC,OAASsB,KAAKvB,MAAMM,KAAKF,KACpCmB,KAAKN,SAAS,CACVhB,MAAOsB,KAAKvB,MAAMC,MAAQsB,KAAKvB,MAAMM,KAAKF,KAC1CE,KAAM,CACFH,OAAQoB,KAAKvB,MAAMM,KAAKH,OAAS,GACjCC,KAAMc,QAA+B,KAAvBK,KAAKvB,MAAMM,KAAKF,MAAae,QAAQ,IACnDd,WAAYkB,KAAKvB,MAAMM,KAAKD,cAIpCmB,MAAM,kCAAD,OAAmCD,KAAKvB,MAAMM,KAAKF,KAAnD,a,qBAIb,WACQmB,KAAKvB,MAAMC,OAASsB,KAAKvB,MAAME,IAAIE,KACnCmB,KAAKN,SAAS,CACVhB,MAAOsB,KAAKvB,MAAMC,MAAQsB,KAAKvB,MAAME,IAAIE,KACzCF,IAAK,CACDC,OAAQoB,KAAKvB,MAAME,IAAIC,OAAS,EAChCC,KAAMc,QAA8B,IAAtBK,KAAKvB,MAAME,IAAIE,MAAae,QAAQ,IAClDd,WAAYkB,KAAKvB,MAAME,IAAIG,cAInCmB,MAAM,kCAAD,OAAmCD,KAAKvB,MAAME,IAAIE,KAAlD,a,oBAIb,WAAU,IAAD,OACD,EAAuBmB,KAAKvB,MAA1BC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,IAAKI,EAAlB,EAAkBA,KAClB,OACI,gCACI,yCAAYL,KACZ,yBAAQwB,UAAU,WAAWC,QAAS,SAACL,GAAD,OAAO,EAAKM,QAAQN,IAA1D,sBACcnB,EAAIC,OADlB,OACiCD,EAAIC,OAAS,EAAE,uBADhD,SAEWD,EAAIE,QACf,yBAAQqB,UAAU,QAAQC,QAAS,SAACL,GAAD,OAAO,EAAKf,KAAKe,IAApD,mBACyB,GAAdf,EAAKH,OADhB,SAC4D,IAArBG,EAAKH,OAAS,IADrD,KACiE,uBADjE,SAEWG,EAAKF,QAAc,uBAC9B,sBAAMwB,GAAG,UAAUC,MAAM,MAAzB,4IAAqE,uBACrE,sBAAMD,GAAG,WAAWC,MAAM,MAA1B,yJ,GA9FMC,IAAMC,WCCtBC,E,4JACJ,WACE,OACE,8BACE,cAAC,EAAD,U,GAJUF,IAAMC,WAUTC,ICTfC,IAASC,OAAO,cAAC,EAAD,IAASvB,SAASC,eAAe,W","file":"static/js/main.89740b24.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Counter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 1000,\r\n            tap: {\r\n                amount: 1,\r\n                cost: 100,\r\n                multiplier: 1,\r\n            },\r\n            auto: {\r\n                amount: 0,\r\n                cost: 1000,\r\n                multiplier: 1\r\n            }\r\n        };\r\n\r\n        setInterval(() => {\r\n            var isOverStackTap = this.state.count >= this.state.tap.cost * 3;\r\n            var isOverStackAuto = this.state.count >= this.state.auto.cost * 2;\r\n            var warntap = document.getElementById(\"warntap\");\r\n            var warnauto = document.getElementById(\"warnauto\");\r\n\r\n            //warntap.style.visibility = isOverStackTap;\r\n            warnauto.style.visibility = isOverStackAuto;\r\n            warntap.style.display = isOverStackTap ? 'inline' : 'none';\r\n            warnauto.style.display = isOverStackAuto ? 'inline' : 'none';\r\n\r\n            this.setState({\r\n                count: Number((this.state.count + this.state.auto.amount * this.state.auto.multiplier).toFixed(2)),\r\n                tap: {\r\n                    amount: this.state.tap.amount,\r\n                    cost: this.state.tap.cost,\r\n                    multiplier: (isOverStackTap ? 0.5 : 1)\r\n                },\r\n                auto: {\r\n                    amount: this.state.auto.amount,\r\n                    cost: this.state.auto.cost,\r\n                    multiplier: (isOverStackAuto ? 0.5 : 1)\r\n                }\r\n            })\r\n        }, 100);\r\n\r\n        document.addEventListener('click', e => this.increment());\r\n    }\r\n\r\n    increment() {\r\n        this.setState({\r\n            count: this.state.count + this.state.tap.amount * this.state.tap.multiplier\r\n        });\r\n    };\r\n\r\n    auto() {\r\n        if (this.state.count >= this.state.auto.cost) {\r\n            this.setState({\r\n                count: this.state.count - this.state.auto.cost,\r\n                auto: {\r\n                    amount: this.state.auto.amount + 0.1,\r\n                    cost: Number((this.state.auto.cost * 1.75).toFixed(0)),\r\n                    multiplier: this.state.auto.multiplier\r\n                }\r\n            })\r\n        } else {\r\n            alert(`not enough count to upgrade! : ${this.state.auto.cost} count`);\r\n        }\r\n    }\r\n\r\n    upgrade() {\r\n        if (this.state.count >= this.state.tap.cost) {\r\n            this.setState({\r\n                count: this.state.count - this.state.tap.cost,\r\n                tap: {\r\n                    amount: this.state.tap.amount + 1,\r\n                    cost: Number((this.state.tap.cost * 1.30).toFixed(0)),\r\n                    multiplier: this.state.tap.multiplier\r\n                }\r\n            })\r\n        } else {\r\n            alert(`not enough count to upgrade! : ${this.state.tap.cost} count`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { count, tap, auto } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>Count: {count}</h1>\r\n                <button className='upgrade1' onClick={(e) => this.upgrade(e)}>\r\n                    Upgrade: {tap.amount} -&gt; {tap.amount + 1}<br />\r\n                    Cost: {tap.cost}</button>\r\n                <button className='auto1' onClick={(e) => this.auto(e)}>\r\n                    Auto: {auto.amount * 10}/s -&gt; {(auto.amount + 0.1) * 10}/s<br />\r\n                    Cost: {auto.cost}</button><br />\r\n                <span id=\"warntap\" color=\"red\">경고: 카운트가 너무 많아 탭 효율이 하락합니다: 50%</span><br/>\r\n                <span id=\"warnauto\" color=\"red\">경고: 카운트가 너무 많아 자동 효율이 하락합니다: 50%</span>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default Counter;","import React from 'react';\nimport Counter from './Counter';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Counter />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}