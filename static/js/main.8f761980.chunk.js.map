{"version":3,"sources":["Counter.js","App.js","index.js"],"names":["Counter","props","state","count","tap","amount","cost","multiplier","auto","setInterval","isOverStackTap","isOverStackAuto","warntap","document","getElementById","warnauto","style","display","setState","Number","toFixed","addEventListener","e","increment","this","alert","className","onClick","upgrade","id","color","React","Component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.8f761980.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Counter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 1000,\r\n            tap: {\r\n                amount: 1,\r\n                cost: 100,\r\n                multiplier: 1,\r\n            },\r\n            auto: {\r\n                amount: 0,\r\n                cost: 1000,\r\n                multiplier: 1\r\n            }\r\n        };\r\n\r\n        setInterval(() => {\r\n            var isOverStackTap = this.state.count >= this.state.tap.cost * 3;\r\n            var isOverStackAuto = this.state.count >= this.state.auto.cost * 2;\r\n            var warntap = document.getElementById(\"warntap\");\r\n            var warnauto = document.getElementById(\"warnauto\");\r\n\r\n            warntap.style.display = isOverStackTap ? 'inline' : 'none';\r\n            warnauto.style.display = isOverStackAuto ? 'inline' : 'none';\r\n\r\n            this.setState({\r\n                count: Number((this.state.count + this.state.auto.amount * this.state.auto.multiplier).toFixed(2)),\r\n                tap: {\r\n                    amount: this.state.tap.amount,\r\n                    cost: this.state.tap.cost,\r\n                    multiplier: (isOverStackTap ? 0.5 : 1)\r\n                },\r\n                auto: {\r\n                    amount: this.state.auto.amount,\r\n                    cost: this.state.auto.cost,\r\n                    multiplier: (isOverStackAuto ? 0.5 : 1)\r\n                }\r\n            })\r\n        }, 100);\r\n\r\n        document.addEventListener('click', e => this.increment());\r\n    }\r\n\r\n    increment() {\r\n        this.setState({\r\n            count: this.state.count + this.state.tap.amount * this.state.tap.multiplier\r\n        });\r\n    };\r\n\r\n    auto() {\r\n        if (this.state.count >= this.state.auto.cost) {\r\n            this.setState({\r\n                count: this.state.count - this.state.auto.cost,\r\n                auto: {\r\n                    amount: this.state.auto.amount + 0.1,\r\n                    cost: Number((this.state.auto.cost * 1.75).toFixed(0)),\r\n                    multiplier: this.state.auto.multiplier\r\n                }\r\n            })\r\n        } else {\r\n            alert(`not enough count to upgrade! : ${this.state.auto.cost} count`);\r\n        }\r\n    }\r\n\r\n    upgrade() {\r\n        if (this.state.count >= this.state.tap.cost) {\r\n            this.setState({\r\n                count: this.state.count - this.state.tap.cost,\r\n                tap: {\r\n                    amount: this.state.tap.amount + 1,\r\n                    cost: Number((this.state.tap.cost * 1.30).toFixed(0)),\r\n                    multiplier: this.state.tap.multiplier\r\n                }\r\n            })\r\n        } else {\r\n            alert(`not enough count to upgrade! : ${this.state.tap.cost} count`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { count, tap, auto } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>Count: {count}</h1>\r\n                <button className='upgrade1' onClick={(e) => this.upgrade(e)}>\r\n                    <b>Self Tap</b><br />\r\n                    Upgrade: {tap.amount} -&gt; {tap.amount + 1}<br />\r\n                    Cost: {tap.cost}</button>\r\n                <button className='auto1' onClick={(e) => this.auto(e)}>\r\n                    <b>Auto Tapping</b><br />\r\n                    {auto.amount > 0 ? \"Upgrade\" : 'Buy'}: {auto.amount * 10}/s -&gt; {(auto.amount + 0.1) * 10}/s<br />\r\n                    Cost: {auto.cost}</button><br />\r\n                <span id=\"warntap\" color=\"red\">Warning: you have too many counts. self-tap efficient is decreased to <b>{this.state.tap.multiplier * 100}%</b>({this.state.tap.amount * this.state.tap.multiplier})</span><br />\r\n                <span id=\"warnauto\" color=\"red\">Warning: you have too many counts. auto-tapping efficient is decreased to <b>{this.state.tap.multiplier * 100}%</b>({this.state.auto.amount * this.state.auto.multiplier})</span>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default Counter;","import React from 'react';\nimport Counter from './Counter';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Counter />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}