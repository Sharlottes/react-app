{"version":3,"sources":["Counter.js","App.js","index.js"],"names":["Counter","props","state","count","tap","amount","cost","multiplier","auto","random","result","setInterval","isOverStackTap","isOverStackAuto","warntap","document","getElementById","warnauto","style","display","upgrade","setState","Number","toFixed","window","addEventListener","e","increment","this","alert","rand","Math","stopPropagation","target","console","log","className","onClick","type","id","autobuy","color","React","Component","App","onContextMenu","preventDefault","ReactDOM","render"],"mappings":"uOA2MeA,E,kDAvMX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,IACPC,IAAK,CACDC,OAAQ,EACRC,KAAM,IACNC,WAAY,EACZC,MAAM,GAEVA,KAAM,CACFH,OAAQ,EACRC,KAAM,IACNC,WAAY,EACZC,MAAM,GAEVC,OAAQ,CACJJ,OAAQ,EACRC,KAAM,IACNI,OAAQ,EACRF,MAAM,IAIdG,aAAY,WACR,IAAIC,EAAiB,EAAKV,MAAMC,OAA+B,EAAtB,EAAKD,MAAME,IAAIE,KACpDO,EAAkB,EAAKX,MAAMC,OAAgC,EAAvB,EAAKD,MAAMM,KAAKF,KACtDQ,EAAUC,SAASC,eAAe,WAClCC,EAAWF,SAASC,eAAe,YAEvCF,EAAQI,MAAMC,QAAUP,EAAiB,SAAW,OACpDK,EAASC,MAAMC,QAAUN,EAAkB,SAAW,OAEnD,EAAKX,MAAME,IAAII,MAAQ,EAAKN,MAAMC,OAAS,EAAKD,MAAME,IAAIE,MAAM,EAAKc,UACrE,EAAKlB,MAAMM,KAAKA,MAAQ,EAAKN,MAAMC,OAAS,EAAKD,MAAMM,KAAKF,MAAM,EAAKE,OACvE,EAAKN,MAAMO,OAAOD,MAAQ,EAAKN,MAAMC,OAAS,EAAKD,MAAMO,OAAOH,MAAM,EAAKG,SAE9E,EAAKY,SAAS,CACVlB,MAAOmB,QAAQ,EAAKpB,MAAMC,MAAQ,EAAKD,MAAMM,KAAKH,OAAS,EAAKH,MAAMM,KAAKD,YAAYgB,QAAQ,IAC/FnB,IAAK,CACDC,OAAQ,EAAKH,MAAME,IAAIC,OACvBC,KAAM,EAAKJ,MAAME,IAAIE,KACrBC,WAAaK,EAAiB,GAAM,EACpCJ,KAAM,EAAKN,MAAME,IAAII,MAEzBA,KAAM,CACFH,OAAQ,EAAKH,MAAMM,KAAKH,OACxBC,KAAM,EAAKJ,MAAMM,KAAKF,KACtBC,WAAaM,EAAkB,GAAM,EACrCL,KAAM,EAAKN,MAAMM,KAAKA,UAG/B,KAGHgB,OAAOC,iBAAiB,SAAS,SAAAC,GAAC,OAAI,EAAKC,eAC3CH,OAAOC,iBAAiB,WAAW,SAAAC,GAAC,OAAI,EAAKC,eAxD9B,E,6CA2DnB,WACIC,KAAKP,SAAS,CACVlB,MAAOyB,KAAK1B,MAAMC,MAAQyB,KAAK1B,MAAME,IAAIC,OAASuB,KAAK1B,MAAME,IAAIG,e,qBAIzE,WACQqB,KAAK1B,MAAMC,OAASyB,KAAK1B,MAAME,IAAIE,KACnCsB,KAAKP,SAAS,CACVlB,MAAOyB,KAAK1B,MAAMC,MAAQyB,KAAK1B,MAAME,IAAIE,KACzCF,IAAK,CACDC,OAAQuB,KAAK1B,MAAME,IAAIC,OAAS,EAChCC,KAAMgB,QAA8B,IAAtBM,KAAK1B,MAAME,IAAIE,MAAaiB,QAAQ,IAClDhB,WAAYqB,KAAK1B,MAAME,IAAIG,WAC3BC,KAAMoB,KAAK1B,MAAME,IAAII,QAI7BqB,MAAM,kCAAD,OAAmCD,KAAK1B,MAAME,IAAIE,KAAlD,a,kBAIb,WACQsB,KAAK1B,MAAMC,OAASyB,KAAK1B,MAAMM,KAAKF,KACpCsB,KAAKP,SAAS,CACVlB,MAAOyB,KAAK1B,MAAMC,MAAQyB,KAAK1B,MAAMM,KAAKF,KAC1CE,KAAM,CACFH,OAAQuB,KAAK1B,MAAMM,KAAKH,OAAS,GACjCC,KAAMgB,QAA+B,KAAvBM,KAAK1B,MAAMM,KAAKF,MAAaiB,QAAQ,IACnDhB,WAAYqB,KAAK1B,MAAMM,KAAKD,WAC5BC,KAAMoB,KAAK1B,MAAMM,KAAKA,QAI9BqB,MAAM,uBAAD,OAAwBD,KAAK1B,MAAMM,KAAKH,OAAS,EAAI,UAAY,MAAjE,eAA6EuB,KAAK1B,MAAMM,KAAKF,KAA7F,a,oBAIb,WACI,GAAIsB,KAAK1B,MAAMC,OAASyB,KAAK1B,MAAMO,OAAOH,KAAM,CAC5C,IAAIwB,EAAOC,KAAKtB,SACZC,EAASY,SAASQ,EAAO,IAAO,EAAIA,EAAO,GAAM,EAAI,GAAKC,KAAKtB,SAAWmB,KAAK1B,MAAMO,OAAOH,MAAMiB,QAAQ,IAC9GK,KAAKP,SAAS,CACVlB,MAAOyB,KAAK1B,MAAMC,OAAsC,IAA7ByB,KAAK1B,MAAMO,OAAOJ,QAAgBuB,KAAK1B,MAAMO,OAAOH,KAAOI,GACtFD,OAAQ,CACJJ,OAAQ,EACRC,KAAM,IACNI,OAAqC,IAA7BkB,KAAK1B,MAAMO,OAAOJ,OAAe,EAAIK,EAC7CF,KAAMoB,KAAK1B,MAAMO,OAAOD,aAIhCqB,MAAM,uBAAD,OAAwBD,KAAK1B,MAAMO,OAAOJ,OAAS,EAAI,QAAU,MAAjE,eAA6EuB,KAAK1B,MAAMO,OAAOH,KAA/F,a,qBAIb,SAAQoB,GAEJ,GADAA,EAAEM,kBACCN,EAAEO,QAAUlB,SAASC,eAAe,WAAY,CAC/C,IAAI,EAAmCY,KAAK1B,MAAME,IAA7CC,EAAL,EAAKA,OAAQC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,KAC/BoB,KAAKP,SAAS,CACVjB,IAAK,CACDC,OAAQA,EACRC,KAAMA,EACNC,WAAYA,EACZC,MAAOA,KAGf0B,QAAQC,IAAIP,KAAK1B,MAAME,IAAII,WACxB,GAAGkB,EAAEO,QAAUlB,SAASC,eAAe,WAAY,CACtD,IAAI,EAAmCY,KAAK1B,MAAMM,KAA7CH,EAAL,EAAKA,OAAQC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,KAC/BoB,KAAKP,SAAS,CACVb,KAAM,CACFH,OAAQA,EACRC,KAAMA,EACNC,WAAYA,EACZC,MAAOA,UAGZ,GAAGkB,EAAEO,QAAUlB,SAASC,eAAe,aAAc,CACxD,IAAI,EAAmCY,KAAK1B,MAAMO,OAA7CJ,EAAL,EAAKA,OAAQC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,KAC/BoB,KAAKP,SAAS,CACVZ,OAAQ,CACJJ,OAAQA,EACRC,KAAMA,EACNC,WAAYA,EACZC,MAAOA,Q,oBAMvB,WAAU,IAAD,OACD,EAA+BoB,KAAK1B,MAAlCC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,IAAKI,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,OACxB,OACI,gCACI,yCAAYa,OAAOnB,EAAMoB,QAAQ,OACjC,yBAAQa,UAAU,SAASC,QAAS,SAACX,GAAD,OAAO,EAAKN,QAAQM,IAAxD,UACI,yCAAe,uBADnB,YAEctB,EAAIC,OAFlB,WAEqCD,EAAIC,OAAS,EAFlD,OAEwD,uBAFxD,SAGWD,EAAIE,KAAK,uBAChB,kCACI,4CAAkB,uBAClB,uBAAOgC,KAAK,WAAWC,GAAG,UAAUF,QAAS,SAAAX,GAAC,OAAI,EAAKc,QAAQd,MAC/D,4BAIR,yBAAQU,UAAU,SAASC,QAAS,SAACX,GAAD,OAAO,EAAKlB,KAAKkB,IAArD,UACI,yCAAe,uBACdlB,EAAKH,OAAS,EAAI,UAAY,MAFnC,KAE4CiB,QAAsB,GAAdd,EAAKH,QAAakB,QAAQ,IAF9E,SAE4FD,QAA8B,IAArBd,EAAKH,OAAS,KAAWkB,QAAQ,IAFtI,KAE4I,uBAF5I,SAGWf,EAAKF,KAAK,uBACjB,kCACI,4CAAkB,uBAClB,uBAAOgC,KAAK,WAAWC,GAAG,UAAUF,QAAS,SAAAX,GAAC,OAAI,EAAKc,QAAQd,MAC/D,4BAIR,yBAAQU,UAAU,SAASC,QAAS,SAACX,GAAD,OAAO,EAAKjB,OAAOiB,IAAvD,UACI,uCAAa,uBACZjB,EAAOJ,OAAS,EAAI,QAAU,MAAM,uBAFzC,SAGWI,EAAOH,KAAK,uBAHvB,YAIcG,EAAOC,OAAO,uBACxB,kCACI,4CAAkB,uBAClB,uBAAO4B,KAAK,WAAWC,GAAG,YAAYF,QAAS,SAAAX,GAAC,OAAI,EAAKc,QAAQd,MACjE,4BAEC,uBAAM,uBAEf,uBAAMa,GAAG,UAAUE,MAAM,MAAMvB,MAAO,CAAEC,QAAShB,GAAoB,EAAXC,EAAIE,KAAW,SAAW,UAApF,mFAAsK,8BAAgC,IAA5BsB,KAAK1B,MAAME,IAAIG,WAAnB,OAAtK,IAAiNqB,KAAK1B,MAAME,IAAIC,OAASuB,KAAK1B,MAAME,IAAIG,WAAxP,WAA+Q,uBAC/Q,uBAAMgC,GAAG,WAAWE,MAAM,MAAMvB,MAAO,CAAEC,QAAShB,GAAqB,EAAZK,EAAKF,KAAW,SAAW,UAAtF,mFAAwK,8BAAgC,IAA5BsB,KAAK1B,MAAME,IAAIG,WAAnB,OAAxK,IAAmNe,QAAiC,GAAzBM,KAAK1B,MAAMM,KAAKH,QAAakB,QAAQ,IAAMK,KAAK1B,MAAMM,KAAKD,WAAtR,gB,GAhMMmC,IAAMC,WCCtBC,G,kKACJ,WACE,OACE,qBAAKC,cAAe,SAACnB,GAAD,OAAOA,EAAEoB,kBAA7B,SACE,cAAC,EAAD,U,GAJUJ,IAAMC,YAUTC,ICVfG,IAASC,OAAO,cAAC,EAAD,IAASjC,SAASC,eAAe,W","file":"static/js/main.bc7c786e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Counter.css';\r\n\r\nclass Counter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 10000,\r\n            tap: {\r\n                amount: 1,\r\n                cost: 100,\r\n                multiplier: 1,\r\n                auto: false\r\n            },\r\n            auto: {\r\n                amount: 0,\r\n                cost: 1000,\r\n                multiplier: 1,\r\n                auto: false\r\n            },\r\n            random: {\r\n                amount: 0,\r\n                cost: 5000,\r\n                result: 0,\r\n                auto: false\r\n            }\r\n        };\r\n\r\n        setInterval(() => { //call every 0.1sec\r\n            var isOverStackTap = this.state.count >= this.state.tap.cost * 3;\r\n            var isOverStackAuto = this.state.count >= this.state.auto.cost * 2;\r\n            var warntap = document.getElementById(\"warntap\");\r\n            var warnauto = document.getElementById(\"warnauto\");\r\n\r\n            warntap.style.display = isOverStackTap ? 'inline' : 'none';\r\n            warnauto.style.display = isOverStackAuto ? 'inline' : 'none';\r\n\r\n            if(this.state.tap.auto && this.state.count >= this.state.tap.cost) this.upgrade();\r\n            if(this.state.auto.auto && this.state.count >= this.state.auto.cost) this.auto(); \r\n            if(this.state.random.auto && this.state.count >= this.state.random.cost) this.random(); \r\n\r\n            this.setState({\r\n                count: Number((this.state.count + this.state.auto.amount * this.state.auto.multiplier).toFixed(2)),\r\n                tap: {\r\n                    amount: this.state.tap.amount,\r\n                    cost: this.state.tap.cost,\r\n                    multiplier: (isOverStackTap ? 0.5 : 1),\r\n                    auto: this.state.tap.auto\r\n                },\r\n                auto: {\r\n                    amount: this.state.auto.amount,\r\n                    cost: this.state.auto.cost,\r\n                    multiplier: (isOverStackAuto ? 0.5 : 1),\r\n                    auto: this.state.auto.auto\r\n                }\r\n            })\r\n        }, 100);\r\n\r\n        //call increment when tap anywhere or press anykey.\r\n        window.addEventListener('click', e => this.increment());\r\n        window.addEventListener(\"keydown\", e => this.increment());\r\n    }\r\n\r\n    increment() {\r\n        this.setState({\r\n            count: this.state.count + this.state.tap.amount * this.state.tap.multiplier\r\n        });\r\n    };\r\n\r\n    upgrade() {\r\n        if (this.state.count >= this.state.tap.cost) {\r\n            this.setState({\r\n                count: this.state.count - this.state.tap.cost,\r\n                tap: {\r\n                    amount: this.state.tap.amount + 1,\r\n                    cost: Number((this.state.tap.cost * 1.30).toFixed(0)),\r\n                    multiplier: this.state.tap.multiplier,\r\n                    auto: this.state.tap.auto\r\n                }\r\n            })\r\n        } else {\r\n            alert(`not enough count to upgrade! : ${this.state.tap.cost} count`);\r\n        }\r\n    }\r\n\r\n    auto() {\r\n        if (this.state.count >= this.state.auto.cost) {\r\n            this.setState({\r\n                count: this.state.count - this.state.auto.cost,\r\n                auto: {\r\n                    amount: this.state.auto.amount + 0.1,\r\n                    cost: Number((this.state.auto.cost * 1.75).toFixed(0)),\r\n                    multiplier: this.state.auto.multiplier,\r\n                    auto: this.state.auto.auto\r\n                }\r\n            })\r\n        } else {\r\n            alert(`not enough count to ${this.state.auto.amount > 0 ? 'upgrade' : 'buy'}! : ${this.state.auto.cost} count`);\r\n        }\r\n    }\r\n\r\n    random() {\r\n        if (this.state.count >= this.state.random.cost) {\r\n            var rand = Math.random();\r\n            var result = Number(((rand > 0.5 ? -1 : rand < 0.5 ? 1 : 0) * Math.random() * this.state.random.cost).toFixed(2));\r\n            this.setState({\r\n                count: this.state.count + (this.state.random.amount === 0 ? -this.state.random.cost : result),\r\n                random: {\r\n                    amount: 1,\r\n                    cost: 1000,\r\n                    result: this.state.random.amount === 0 ? 0 : result,\r\n                    auto: this.state.random.auto\r\n                }\r\n            })\r\n        } else {\r\n            alert(`not enough count to ${this.state.random.amount > 0 ? 'start' : 'buy'}! : ${this.state.random.cost} count`);\r\n        }\r\n    }\r\n\r\n    autobuy(e) {\r\n        e.stopPropagation();\r\n        if(e.target == document.getElementById('selfbuy')) {\r\n            var {amount, cost, multiplier, auto} = this.state.tap;\r\n            this.setState({\r\n                tap: {\r\n                    amount: amount,\r\n                    cost: cost,\r\n                    multiplier: multiplier,\r\n                    auto: !auto\r\n                }\r\n            })\r\n            console.log(this.state.tap.auto);\r\n        } else if(e.target == document.getElementById('autobuy')) {\r\n            var {amount, cost, multiplier, auto} = this.state.auto;\r\n            this.setState({\r\n                auto: {\r\n                    amount: amount,\r\n                    cost: cost,\r\n                    multiplier: multiplier,\r\n                    auto: !auto\r\n                }\r\n            })\r\n        } else if(e.target == document.getElementById('randombuy')) {\r\n            var {amount, cost, multiplier, auto} = this.state.random;\r\n            this.setState({\r\n                random: {\r\n                    amount: amount,\r\n                    cost: cost,\r\n                    multiplier: multiplier,\r\n                    auto: !auto\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { count, tap, auto, random } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>Count: {Number(count.toFixed(2))}</h1>\r\n                <button className='ripple' onClick={(e) => this.upgrade(e)}>\r\n                    <b>SELF TAP</b><br />\r\n                    Upgrade: {tap.amount}/tap -&gt; {tap.amount + 1}/tap<br />\r\n                    Cost: {tap.cost}<br />\r\n                    <label>\r\n                        <b>AUTO BUYING</b><br />\r\n                        <input type=\"checkbox\" id=\"selfbuy\" onClick={e => this.autobuy(e)} />\r\n                        <i />\r\n                    </label>\r\n                </button>\r\n\r\n                <button className='ripple' onClick={(e) => this.auto(e)}>\r\n                    <b>AUTO TAP</b><br />\r\n                    {auto.amount > 0 ? \"Upgrade\" : 'Buy'}: {Number((auto.amount * 10).toFixed(2))}/s -&gt; {Number(((auto.amount + 0.1) * 10).toFixed(2))}/s<br />\r\n                    Cost: {auto.cost}<br />\r\n                    <label>\r\n                        <b>AUTO BUYING</b><br />\r\n                        <input type=\"checkbox\" id=\"autobuy\" onClick={e => this.autobuy(e)} />\r\n                        <i />\r\n                    </label>\r\n                </button>\r\n\r\n                <button className='ripple' onClick={(e) => this.random(e)}>\r\n                    <b>RANDOM</b><br />\r\n                    {random.amount > 0 ? \"Start\" : 'Buy'}<br />\r\n                    Cost: {random.cost}<br />\r\n                    you got: {random.result}<br />\r\n                    <label>\r\n                        <b>AUTO BUYING</b><br />\r\n                        <input type=\"checkbox\" id=\"randombuy\" onClick={e => this.autobuy(e)} />\r\n                        <i />\r\n                    </label>\r\n                </button><br /><br />\r\n\r\n                <span id=\"warntap\" color=\"red\" style={{ display: count >= tap.cost * 3 ? 'inline' : 'hidden' }}>Warning: you have too many counts. self-tap efficient is decreased to <b>{this.state.tap.multiplier * 100}%</b>({this.state.tap.amount * this.state.tap.multiplier}/tap)</span><br />\r\n                <span id=\"warnauto\" color=\"red\" style={{ display: count >= auto.cost * 2 ? 'inline' : 'hidden' }}>Warning: you have too many counts. auto-tap efficient is decreased to <b>{this.state.tap.multiplier * 100}%</b>({Number((this.state.auto.amount * 10).toFixed(2)) * this.state.auto.multiplier}/s)</span>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default Counter;","import React from 'react';\nimport Counter from './Counter';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div onContextMenu={(e) => e.preventDefault()}>\n        <Counter />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}